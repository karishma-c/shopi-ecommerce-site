[{"/home/karish/Desktop/Shopi/src/index.js":"1","/home/karish/Desktop/Shopi/src/App.js":"2","/home/karish/Desktop/Shopi/src/reportWebVitals.js":"3","/home/karish/Desktop/Shopi/src/components/Home.js":"4","/home/karish/Desktop/Shopi/src/components/Navbar.js":"5","/home/karish/Desktop/Shopi/src/components/Productscontainer.js":"6","/home/karish/Desktop/Shopi/src/components/Modal.js":"7"},{"size":500,"mtime":1622638433363,"results":"8","hashOfConfig":"9"},{"size":430,"mtime":1635242327090,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1622638433363,"results":"11","hashOfConfig":"9"},{"size":286,"mtime":1623337462055,"results":"12","hashOfConfig":"9"},{"size":1266,"mtime":1635356107978,"results":"13","hashOfConfig":"9"},{"size":6631,"mtime":1635349380339,"results":"14","hashOfConfig":"9"},{"size":679,"mtime":1635356145728,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xujcxk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/karish/Desktop/Shopi/src/index.js",[],["33","34"],"/home/karish/Desktop/Shopi/src/App.js",[],"/home/karish/Desktop/Shopi/src/reportWebVitals.js",[],"/home/karish/Desktop/Shopi/src/components/Home.js",[],"/home/karish/Desktop/Shopi/src/components/Navbar.js",["35","36","37"],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport shopBag from './../images/shop-bag.svg';\nimport './../styles/Navbar.css';\nimport Home from './Home';\nimport Modal from './Modal';\n\nconst Navbar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    return (\n        \n        <div >\n            <div className=\"Nav-bar\" >\n                <div className=\"Logo\">\n                    <h2 className=\"Logo-text\">Shopi</h2>\n                </div>\n                <div className=\"Cart-section\" >\n                   <img className=\"Cart-img\" src={shopBag} alt=\"bagImage\" />\n                   <Link to=\"/cart\"><h3 className=\"Cart-text\" onClick={viewCart}>Cart</h3></Link>\n                </div>\n            </div>\n            \n        </div>\n        \n    )\n    function viewCart() {\n        \n        <Modal open={isOpen} onClose={() => setIsOpen(false)} >\n            <div className=\"modalContent\">\n                <div className=\"modalImage\">\n                    <img id=\"currentImage\" src=\"\" alt=\"image\" />\n                </div>\n                <h3 id=\"Name\">Empty</h3>\n                <h3 id=\"Price\">Empty</h3>\n            </div>\n        </Modal>\n        \n    }\n    \n}\n\nexport default Navbar;","/home/karish/Desktop/Shopi/src/components/Productscontainer.js",["38","39","40","41"],"import React, { useState } from 'react';\nimport ReactDOM  from 'react';\nimport sunscreen from './../images/sunscreen.png';\nimport foundation from './../images/foundation.png';\nimport nailcolorRemove from './../images/nailcolor-remover.png';\n// import instaEyeliner from './../images/insta-eyeliner.png';\n// import facePack from './../images/sheet-facepack.png';\nimport shineEyeliner from './../images/shine-eyeliner.png';\nimport './../styles/Productscontainer.css';\nimport Modal from './Modal';\n// import './../styles/Modal.css';\n// import { Modal } from 'bootstrap';\nlet productArray = [];\n\nconst Productscontainer = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    \n    return (\n        <div id=\"main\">\n            <div className=\"message-box\">\n               <span id=\"close\" className=\"close-Icon\" onClick={hideToast}>&times;</span>\n               <h3 className=\"toast-message\"></h3>\n            </div>\n            <div className=\"Products-container\" onLoad={showProducts}>\n                <div className=\"Product-card\" data-itemType=\"powder\">\n                    \n                    <div className=\"Product-image\">\n                        <img src={sunscreen} alt=\"img\" />\n                    </div>\n                    <div className=\"Product-details\">\n                        <h3 className=\"Product-name\">Face Powder With Sunscreen</h3>\n                        <h4 className=\"Product-price\">$500</h4>\n                    </div>\n                        \n                    \n                    <h5 className=\"Add-button\">Add to Cart</h5>\n                </div>\n                <div className=\"Product-card\" data-itemType=\"cream\">\n                    \n                    <div className=\"Product-image\">\n                        <img src={foundation} alt=\"img\" />\n                    </div>\n                    <div className=\"Product-details\">\n                        <h3 className=\"Product-name\">Weightless Mousse Foundation</h3>\n                        <h4 className=\"Product-price\">$350</h4>\n                    </div>\n                        \n                    \n                    <h5 className=\"Add-button\">Add to Cart</h5>\n                </div>\n                <div className=\"Product-card\" data-itemType=\"nailcolor\">\n                    \n                    <div className=\"Product-image\">\n                        <img src={nailcolorRemove} alt=\"img\" />\n                    </div>\n                    <div className=\"Product-details\">\n                        <h3 className=\"Product-name\">Nail Color Remove</h3>\n                        <h4 className=\"Product-price\">$120</h4>\n                    </div>\n                        \n                    \n                    <h5 className=\"Add-button\">Add to Cart</h5>\n                </div>\n                <div className=\"Product-card\" data-itemType=\"eyeliner\">\n                    \n                    <div className=\"Product-image\">\n                        <img src={shineEyeliner} alt=\"img\" />\n                    </div>\n                    <div className=\"Product-details\">\n                        <h3 className=\"Product-name\">Absolute Shine Line Eye Liner</h3>\n                        <h4 className=\"Product-price\">$750</h4>\n                    </div>\n                    \n                   \n                    <h5 className=\"Add-button\">Add to Cart</h5>\n                </div> \n            </div>   \n            <Modal open={isOpen} onClose={() => setIsOpen(false)} >\n               <div className=\"modalContent\">\n                   <div className=\"modalImage\">\n                       <img id=\"currentImage\" src=\"\" alt=\"image\" />\n                   </div>\n                   <h3 id=\"Name\">Empty</h3>\n                   <h3 id=\"Price\">Empty</h3>\n               </div>\n            </Modal>\n        </div>  \n    )\n\n    function showProducts() {\n        const addToCartBtn = document.querySelectorAll(\".Add-button\");\n        const elements = document.querySelectorAll(\".Product-card\");\n        productArray.push(elements);\n        console.log(productArray);\n        addToCartBtn.forEach(addBtn => {\n            addBtn.addEventListener('click', () => {\n                \n                if(addBtn.innerHTML == \"Add to Cart\"){\n                    showMessage(\"Item added to the Cart!!\");\n                    setTimeout(hideToast, 3000);\n                } \n                addBtn.innerHTML = \"Visit Cart\";\n                addBtn.removeAttribute(\"className\", \"Add-button\")\n                addBtn.setAttribute(\"id\", \"View-button\");\n                const visitCartBtn = document.querySelectorAll(\"#View-button\");\n                visitCartBtn.forEach(visitBtn => {\n                    visitBtn.addEventListener('click', () => {\n                        // let Image = document.getElementById(\"currentImage\");\n                        // Image.src = e.target;\n                        // let Name = document.querySelector(\"#Name\");\n                        // Name.innerText = e.target.innerText;\n                        \n                        // console.log(e);\n                        // productArray.push();\n                        // console.log(productArray);\n                        setIsOpen(true);\n                        \n                    })\n                })\n            })\n        }); \n    }\n\n    function showMessage(text) {\n       const toaster = document.getElementsByClassName(\"message-box\")[0];\n       const message = document.querySelector(\".toast-message\");\n       const closeBtn = document.getElementById(\"close\");\n       message.textContent = text;\n       toaster.style.display = \"block\";\n       closeBtn.addEventListener(\"click\" , () => {\n            setTimeout(\n                hideToast\n            , 0);\n        })\n    }\n\n    function hideToast() {\n        const toaster = document.getElementsByClassName(\"message-box\")[0];\n        toaster.style.display = \"none\";\n    }\n    \n}\n\nexport default Productscontainer;\n\n\n\n\n// console.log(products);\n// const container = document.getElementsByClassName(\"Product-container\");\n// let productList = [];\n// productList.push(products);\n// console.log(productList);\n// productList.forEach(element => {\n//     let product = `<div class=\"Product-card\">\n//     <div class=\"Product-image\">\n//         <img src=\"${element.productimage}\" alt=\"img\">\n//     </div>\n//     <div class=\"Product-details\">\n//         <h3 class=\"Product-name\">${element.productname}</h2>\n//         <h4 class=\"Product-price\">${element.productprice}</h4>\n//         <h5 class=\"Add-button\">Add to Cart</h5>\n//     </div>\n//     </div>`;\n//     container.insertAdjacentHTML('beforeend', product);\n//     console.log(element);\n// })\n","/home/karish/Desktop/Shopi/src/components/Modal.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"50","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":32,"column":21,"nodeType":"53","endLine":32,"endColumn":65},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":22,"column":16,"nodeType":"53","endLine":22,"endColumn":46},{"ruleId":"51","severity":1,"message":"52","line":81,"column":24,"nodeType":"53","endLine":81,"endColumn":68},{"ruleId":"56","severity":1,"message":"57","line":98,"column":37,"nodeType":"58","messageId":"59","endLine":98,"endColumn":39},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]